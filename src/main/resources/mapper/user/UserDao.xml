<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.whu.libingteam.user.dao.UserDao">
  <resultMap id="BaseResultMap" type="com.whu.libingteam.user.entity.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="photo" jdbcType="VARCHAR" property="photo" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="position" jdbcType="CHAR" property="position" />
    <result column="grade" jdbcType="DATE" property="grade" />
    <result column="state" jdbcType="CHAR" property="state" />
    <result column="introducation" jdbcType="VARCHAR" property="introducation" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="researchDirection" jdbcType="VARCHAR" property="researchDirection" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="createBy" jdbcType="VARCHAR" property="createBy" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="updateBy" jdbcType="VARCHAR" property="updateBy" />
    <result column="isDelete" jdbcType="TINYINT" property="isDelete" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, account, `password`, `name`, email, photo, phone, `position`, grade, `state`, 
    introducation, address, researchDirection, salt, createTime, createBy, updateTime, 
    updateBy, isDelete
  </sql>
  <select id="selectByExample" parameterType="com.whu.libingteam.user.entity.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.whu.libingteam.user.entity.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.whu.libingteam.user.entity.User">
    insert into user (id, account, `password`, 
      `name`, email, photo, 
      phone, `position`, grade, `state`, 
      introducation, address, researchDirection, 
      salt, createTime, createBy, 
      updateTime, updateBy, isDelete
      )
    values (#{id,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{photo,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{position,jdbcType=CHAR}, #{grade,jdbcType=DATE}, #{state,jdbcType=CHAR}, 
      #{introducation,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{researchDirection,jdbcType=VARCHAR}, 
      #{salt,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{isDelete,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.whu.libingteam.user.entity.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="photo != null">
        photo,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="position != null">
        `position`,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="state != null">
        `state`,
      </if>
      <if test="introducation != null">
        introducation,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="researchDirection != null">
        researchDirection,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="createBy != null">
        createBy,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
      <if test="updateBy != null">
        updateBy,
      </if>
      <if test="isDelete != null">
        isDelete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="photo != null">
        #{photo,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        #{position,jdbcType=CHAR},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=DATE},
      </if>
      <if test="state != null">
        #{state,jdbcType=CHAR},
      </if>
      <if test="introducation != null">
        #{introducation,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="researchDirection != null">
        #{researchDirection,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.whu.libingteam.user.entity.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        `password` = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.photo != null">
        photo = #{record.photo,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.position != null">
        `position` = #{record.position,jdbcType=CHAR},
      </if>
      <if test="record.grade != null">
        grade = #{record.grade,jdbcType=DATE},
      </if>
      <if test="record.state != null">
        `state` = #{record.state,jdbcType=CHAR},
      </if>
      <if test="record.introducation != null">
        introducation = #{record.introducation,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.researchDirection != null">
        researchDirection = #{record.researchDirection,jdbcType=VARCHAR},
      </if>
      <if test="record.salt != null">
        salt = #{record.salt,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createBy != null">
        createBy = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        updateBy = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.isDelete != null">
        isDelete = #{record.isDelete,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=INTEGER},
      account = #{record.account,jdbcType=VARCHAR},
      `password` = #{record.password,jdbcType=VARCHAR},
      `name` = #{record.name,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      photo = #{record.photo,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      `position` = #{record.position,jdbcType=CHAR},
      grade = #{record.grade,jdbcType=DATE},
      `state` = #{record.state,jdbcType=CHAR},
      introducation = #{record.introducation,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      researchDirection = #{record.researchDirection,jdbcType=VARCHAR},
      salt = #{record.salt,jdbcType=VARCHAR},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      createBy = #{record.createBy,jdbcType=VARCHAR},
      updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      updateBy = #{record.updateBy,jdbcType=VARCHAR},
      isDelete = #{record.isDelete,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.whu.libingteam.user.entity.User">
    update user
    <set>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="photo != null">
        photo = #{photo,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        `position` = #{position,jdbcType=CHAR},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=DATE},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=CHAR},
      </if>
      <if test="introducation != null">
        introducation = #{introducation,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="researchDirection != null">
        researchDirection = #{researchDirection,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        createBy = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        updateBy = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        isDelete = #{isDelete,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.whu.libingteam.user.entity.User">
    update user
    set account = #{account,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      photo = #{photo,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      `position` = #{position,jdbcType=CHAR},
      grade = #{grade,jdbcType=DATE},
      `state` = #{state,jdbcType=CHAR},
      introducation = #{introducation,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      researchDirection = #{researchDirection,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      createBy = #{createBy,jdbcType=VARCHAR},
      updateTime = #{updateTime,jdbcType=TIMESTAMP},
      updateBy = #{updateBy,jdbcType=VARCHAR},
      isDelete = #{isDelete,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--自己添加的SQL语句-->
  <select id="selectByAccount" resultMap="BaseResultMap">
        select * from user
          where account = #{account,jdbcType=VARCHAR} and isDelete = 0
    </select>

  <select id="selectUsersByRoleId" resultMap="BaseResultMap">
        select * from user
          where id in (
            select userId from userRole
              where roleId = #{roleId,jdbcType=INTEGER} and isDelete = 0
          )  and isDelete = 0
    </select>

</mapper>